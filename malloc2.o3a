        /jump   Main                # Can't easily access address 0, so don't put a loop start here
Main:   /push   Text0*
        /call   Print

        /push   Topneg
        /exec   PrintNum
        /push   Space
        /exec   Writechar
        /push   Topneg*
        /exec   PrintNum
        /push   Space
        /exec   Writechar
        /push   Almost
        /exec   PrintNum
        /push   Ten
        /exec   Writechar

        /push   Ten
        /exec   Malloc
        /push   Mten
        /exec   Malloc
        /lit-   5 Topneg*
        /lit-   -35 *Topneg*        # should succeed
        /push   *Topneg*
        /exec   Dup
        /exec   Writechar
        /exec   PrintNum
        /push   Ten
        /exec   Writechar
        /push   Mten
        /exec   Free
        /push   Ten
        /exec   Free
        /push   Topneg*
        /exec   PrintNum
        /push   Ten
        /exec   Writechar
        /lit-   5 Topneg
        /push   Topneg
        /exec   PrintNum
        /push   Ten
        /exec   Writechar
        /sub    *Topneg             # should fail
        /push   Text1*
        /call   Print
        /jump   -1                  # Halt

Print:  /pop    print*
Ploop:  /push   *print*
        /exec   Writechar
        /lit-   1 print*
        /jump   *print* Pend
        /jump   Ploop
Pend:   /sub    print*
        /ret
% print*: 0


% --NEGATIVE--: --NEGATIVE--
Ten: 10
Space: 32
Malloc: 16
Free: -16
Mten: -10
Text1: '"' "These are the times that try men's souls." '"' 10 0
Text1*: Text1
Writechar: -1
Text0: "Malloc & Free test 2." 10 "Use a negative number to allocate or free negative memory." 10  "Make sure to stay in bounds!" 10 0
Text0*: Text0
PrintNum: -2
Dup: 3
Topneg*: Topneg
Almost: ?
Topneg: @
